/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.tiket;

import dao.BasePresenter;
import dao.TiketModel;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utils.Config;
import utils.DialogFactory;
import utils.StringHelper;

/**
 *
 * @author Aldhi Ramdan
 */
public class Tiket extends javax.swing.JFrame implements TiketMvpView<TiketModel> {

    TiketPresenter mPresenter;

    /**
     * Creates new form Ticket
     */
    public Tiket() {
        mPresenter = new TiketPresenter();
        mPresenter.attachView(this);
        initComponents();
        formReadyToFilled(false);
        setDefaultButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTiket = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtTicketCode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMaskapai = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbClass = new javax.swing.JComboBox<String>();
        jLabel8 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tambahBT = new javax.swing.JButton();
        simpanBT = new javax.swing.JButton();
        editBT = new javax.swing.JButton();
        hapusBT = new javax.swing.JButton();
        keluarBT = new javax.swing.JButton();
        cariBT = new javax.swing.JButton();
        txtDestination = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbStatus = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 2));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Master Data Tiket");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, -1));

        tblTiket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTiket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTiketMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTiket);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 510, 200));

        jLabel2.setText("Kode Tiket");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 61, 80, -1));

        txtTicketCode.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtTicketCode.setDisabledTextColor(new java.awt.Color(51, 51, 255));
        jPanel1.add(txtTicketCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 90, -1));

        jLabel3.setText("Maskapai");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 80, -1));
        jPanel1.add(txtMaskapai, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 430, -1));

        jLabel5.setText("Kelas");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 70, -1));

        cbClass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ekonomi", "Eksekutif", "Bisnis" }));
        jPanel1.add(cbClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 120, 20));

        jLabel8.setText("Harga");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 80, 20));

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPriceKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });
        jPanel1.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 230, -1));

        jLabel4.setText("Status");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 70, -1));

        tambahBT.setText("Tambah");
        tambahBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahBTActionPerformed(evt);
            }
        });
        jPanel1.add(tambahBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 90, -1));

        simpanBT.setText("Simpan");
        simpanBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanBTActionPerformed(evt);
            }
        });
        jPanel1.add(simpanBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 90, -1));

        editBT.setText("Edit");
        editBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBTActionPerformed(evt);
            }
        });
        jPanel1.add(editBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, 80, -1));

        hapusBT.setText("Hapus");
        hapusBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusBTActionPerformed(evt);
            }
        });
        jPanel1.add(hapusBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, 90, -1));

        keluarBT.setText("Keluar");
        keluarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarBTActionPerformed(evt);
            }
        });
        jPanel1.add(keluarBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 280, 80, -1));

        cariBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Cari2.png"))); // NOI18N
        cariBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariBTActionPerformed(evt);
            }
        });
        jPanel1.add(cariBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 40, 20));

        txtDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDestinationActionPerformed(evt);
            }
        });
        txtDestination.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDestinationKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDestinationKeyTyped(evt);
            }
        });
        jPanel1.add(txtDestination, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 430, -1));

        jLabel9.setText("Tujuan");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 80, 20));

        cbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tersedia", "Tidak Tersedia" }));
        jPanel1.add(cbStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 120, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblTiketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTiketMouseClicked
        // TODO add your handling code here:
        int baris = tblTiket.getSelectedRow();
        txtTicketCode.setText(tblTiket.getModel().getValueAt(baris, 0).toString());
        txtMaskapai.setText(tblTiket.getModel().getValueAt(baris, 1).toString());
        cbClass.setSelectedItem(tblTiket.getModel().getValueAt(baris, 2).toString());
        txtDestination.setText(tblTiket.getModel().getValueAt(baris, 3).toString());
        txtPrice.setText(tblTiket.getModel().getValueAt(baris, 4).toString());
        cbStatus.setSelectedItem(tblTiket.getModel().getValueAt(baris, 5).toString());
        hapusBT.setEnabled(true);
        editBT.setEnabled(true);
    }//GEN-LAST:event_tblTiketMouseClicked

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceKeyPressed

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        // TODO add your handling code here:
        //validasi data harus angka atau tombol backspace
        char karakter = evt.getKeyChar();
        if (!(Character.isDigit(karakter) || karakter == KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPriceKeyTyped

    private void tambahBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahBTActionPerformed
        // TODO add your handling code here:
        if (tambahBT.getText().equalsIgnoreCase("tambah")) {
            tambahBT.setText("Batal");
            //bersih();
            formReadyToFilled(true);
            txtTicketCode.setText(mPresenter.generateFormId());
            txtMaskapai.requestFocus();
            txtTicketCode.setEnabled(false);
            tambahBT.setEnabled(true);
            simpanBT.setEnabled(true);
            hapusBT.setEnabled(false);
            editBT.setEnabled(false);
            keluarBT.setEnabled(false);
            cariBT.setEnabled(false);
        } else {
            tambahBT.setText("Tambah");
            clearForm();
            formReadyToFilled(false);
            setDefaultButton();
        }
    }//GEN-LAST:event_tambahBTActionPerformed

    private void simpanBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanBTActionPerformed
        if (!StringHelper.validateField(txtTicketCode.getText(), txtMaskapai.getText(), cbClass.getSelectedItem().toString(), txtDestination.getText(), txtPrice.getText(), cbStatus.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(null, "Lengkapi inputan data", "Pesan", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (tambahBT.getText().equalsIgnoreCase("batal")) {
                if (tambahBT.getText().equalsIgnoreCase("batal")) {
                    mPresenter.save(getObjectModel());
                } else {
                    JOptionPane.showMessageDialog(null, "Simpan data gagal, periksa kembali", "Pesan", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            if (editBT.getText().equalsIgnoreCase("batal")) {
                if (editBT.getText().equalsIgnoreCase("batal")) {
                    mPresenter.update(getObjectModel());
                } else {
                    JOptionPane.showMessageDialog(null, "Edit data gagal, periksa kembali", "Pesan", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            clearForm();
            formReadyToFilled(false);
            tambahBT.setText("Tambah");
            editBT.setText("Edit");
            setDefaultButton();
        }
    }//GEN-LAST:event_simpanBTActionPerformed

    private void editBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBTActionPerformed
        if (editBT.getText().equalsIgnoreCase("edit")) {
            editBT.setText("Batal");
            formReadyToFilled(true);
            txtTicketCode.setEnabled(false);
            txtMaskapai.requestFocus();
            tambahBT.setEnabled(false);
            simpanBT.setEnabled(true);
            hapusBT.setEnabled(false);
            editBT.setEnabled(true);
            keluarBT.setEnabled(false);
            cariBT.setEnabled(false);
        } else {
            editBT.setText("Edit");
            clearForm();
            formReadyToFilled(false);
            setDefaultButton();
        }
    }//GEN-LAST:event_editBTActionPerformed

    private void hapusBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusBTActionPerformed
        // TODO add your handling code here:
        int pesan = JOptionPane.showConfirmDialog(null, "Hapus Data ?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (pesan == JOptionPane.YES_OPTION) {
            if (pesan == JOptionPane.YES_OPTION) {
                mPresenter.delete(txtTicketCode.getText());
                clearForm();
                formReadyToFilled(false);
                setDefaultButton();
            } else {
                DialogFactory.dialogError("", "Gagal menghapus data");
            }
            showDataTable();
        }
    }//GEN-LAST:event_hapusBTActionPerformed

    private void keluarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarBTActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_keluarBTActionPerformed

    private void cariBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariBTActionPerformed
         mPresenter.searchById(tblTiket);
    }//GEN-LAST:event_cariBTActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        ImageIcon img = new ImageIcon("src/gambar/kredit.png");
        setIconImage(img.getImage());
        cbClass.setSelectedItem(null);
        cbStatus.setSelectedItem(null);
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        showDataTable();
    }//GEN-LAST:event_formWindowOpened

    private void txtDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDestinationActionPerformed
    }//GEN-LAST:event_txtDestinationActionPerformed

    private void txtDestinationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDestinationKeyPressed
    }//GEN-LAST:event_txtDestinationKeyPressed

    private void txtDestinationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDestinationKeyTyped
    }//GEN-LAST:event_txtDestinationKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tiket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cariBT;
    private javax.swing.JComboBox<String> cbClass;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JButton editBT;
    private javax.swing.JButton hapusBT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton keluarBT;
    private javax.swing.JButton simpanBT;
    private javax.swing.JButton tambahBT;
    private javax.swing.JTable tblTiket;
    private javax.swing.JTextField txtDestination;
    private javax.swing.JTextField txtMaskapai;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtTicketCode;
    // End of variables declaration//GEN-END:variables

    @Override
    public void clearForm() {
        txtTicketCode.setText("");
        txtMaskapai.setText("");
        cbClass.setSelectedItem(null);
        txtDestination.setText("");
        txtPrice.setText("");
        cbStatus.setSelectedItem(null);
    }

    @Override
    public void setDefaultButton() {
        tambahBT.setEnabled(true);
        simpanBT.setEnabled(false);
        hapusBT.setEnabled(false);
        editBT.setEnabled(false);
        keluarBT.setEnabled(true);
        cariBT.setEnabled(true);
    }

    @Override
    public void formReadyToFilled(boolean enabled) {
        txtTicketCode.setEnabled(enabled);
        txtMaskapai.setEnabled(enabled);
        cbClass.setEnabled(enabled);
        txtDestination.setEnabled(enabled);
        txtPrice.setEnabled(enabled);
        cbStatus.setEnabled(enabled);
    }

    @Override
    public void onSucceed(BasePresenter.DataAccessType dataAccessType, TiketModel model) {
        if (model != null) {
            DialogFactory.showDialog(model.message);
            showDataTable();
        }
    }

    @Override
    public void onError(BasePresenter.DataAccessType dataAccessType) {
        DialogFactory.dialogError("Pesan", "Terjadi gangguan pada database, silahkan coba lagi");
    }

    private void showDataTable() {
        DefaultTableModel data = new DefaultTableModel(null, Config.TABLE_HEADER_TIKET);
        tblTiket.setModel(data);
        ArrayList<TiketModel> list = mPresenter.getData();
        if (list != null) {
            for (TiketModel item : list) {
                String column[] = {item.kodeTicket, item.maskapai, item.kelas, item.tujuan, String.valueOf(item.harga), item.status};
                data.addRow(column);
            }
        }
    }
    
    private TiketModel getObjectModel() {
        TiketModel model = new TiketModel();
        model.kodeTicket = txtTicketCode.getText();
        model.maskapai = txtMaskapai.getText();
        model.kelas = cbClass.getSelectedItem().toString();
        model.tujuan = txtDestination.getText();
        model.harga = Double.parseDouble(txtPrice.getText());
        model.status = cbStatus.getSelectedItem().toString();
        return model;
    }
}
